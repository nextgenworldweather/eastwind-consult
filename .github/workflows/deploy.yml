name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      # Step 3: Cache Node.js dependencies
      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-


      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          npm ci
          npm install firebase
          npm install --save-dev gh-pages
          npm install @vitejs/plugin-react vite @types/react @types/react-dom --save-dev
          npm install -D tailwindcss @tailwindcss/forms autoprefixer postcss

      # Step 5: Build the app
      - name: Build the app
        run: |
          rm -rf dist
          npm run build
          ls -la ./dist

      # Step 6: Verify successful build
      - name: List files in dist folder
        run: ls -la ./dist

      # Step 7: Upload the build artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages  # The name of the uploaded artifact
          path: dist  # Update this path if needed

  deploy:
    needs: build
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Step 8: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: github-pages 

      # Step 8: Clean up
      - name: Clean up
        run: npm run clean